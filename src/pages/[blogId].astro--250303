---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getBlogs, getBlogDetail } from "../library/microcms";
//import { fetchContentOrPreview } from "../utils/fetchContentOrPreview"; //プレビュー用

//静的にレンダリング
export const prerender = true; 

// 詳細記事ページの全パスを取得
export async function getStaticPaths() {
  const response = await getBlogs({ fields: ["id"], limit: 100 });
  return response.contents.map((content: any) => ({
    params: {
      blogId: content.id,
    },
  }));
}
//記事の詳細情報を取得
const { blogId } = Astro.params; //ページの名前と一致する必要がある
const blog = await getBlogDetail(blogId as string);

// ページャー
const response = await getBlogs({ fields: ["id"], limit: 100 });
const blogs = response.contents;
const currentId = blogId;
const index = blogs.findIndex((blog) => blog.id === currentId); // 現在の記事のインデックスを取得
// 前後の記事のIDを取得（範囲チェック）
const prevPostId = index > 0 ? blogs[index - 1].id : null;
const nextPostId = index < blogs.length - 1 ? blogs[index + 1].id : null;

---

<BaseLayout pageTitle={blog.title}>
  <article class="l-blog-container c-blog-article">
    <div class="c-blog-article__header">
      <time class="time">{new Date(blog.publishedAt).toLocaleDateString()}</time>
      <ul class="c-tags">
        {blog.tags.map((tag: any) => (
          <li class="tag">
            <a href={`/tags/${tag.id}`}>{tag.name}</a>
          </li>
        ))}
      </ul>
      <h1 class="c-blog-article__tit">{blog.title}</h1>
    </div>
    <div class="c-blog-article__contents" set:html={blog.content} />
  </article>
  <nav class="c-blog-article__pager">
    {prevPostId ? (
      <a class="item" href={`/${prevPostId}`}>&#9665;</a>
    ) : (
      <span class="item"></span>
    )}
    <div class="c-btn">
      <a href="/page/">ブログ一覧へ</a>
    </div>
    {nextPostId ? (
      <a class="item" href={`/${nextPostId}`}>&#9655;</a>
    ) : (
      <span class="item"></span>
    )}
  </nav>
</BaseLayout>